/* AUTOGENERATED FILE. DO NOT EDIT. */
#ifndef _MOCK_IO_H
#define _MOCK_IO_H

#include "unity.h"
#include "io.h"

/* Ignore the following warnings, since we are copying code */
#if defined(__GNUC__) && !defined(__ICC) && !defined(__TMS470__)
#if __GNUC__ > 4 || (__GNUC__ == 4 && (__GNUC_MINOR__ > 6 || (__GNUC_MINOR__ == 6 && __GNUC_PATCHLEVEL__ > 0)))
#pragma GCC diagnostic push
#endif
#if !defined(__clang__)
#pragma GCC diagnostic ignored "-Wpragmas"
#endif
#pragma GCC diagnostic ignored "-Wunknown-pragmas"
#pragma GCC diagnostic ignored "-Wduplicate-decl-specifier"
#endif

void mock_io_Init(void);
void mock_io_Destroy(void);
void mock_io_Verify(void);




#define uxIORead_IgnoreAndReturn(cmock_retval) uxIORead_CMockIgnoreAndReturn(__LINE__, cmock_retval)
void uxIORead_CMockIgnoreAndReturn(UNITY_LINE_TYPE cmock_line, ioData cmock_to_return);
#define uxIORead_StopIgnore() uxIORead_CMockStopIgnore()
void uxIORead_CMockStopIgnore(void);
#define uxIORead_ExpectAndReturn(addr, cmock_retval) uxIORead_CMockExpectAndReturn(__LINE__, addr, cmock_retval)
void uxIORead_CMockExpectAndReturn(UNITY_LINE_TYPE cmock_line, ioAddress addr, ioData cmock_to_return);
typedef ioData (* CMOCK_uxIORead_CALLBACK)(ioAddress addr, int cmock_num_calls);
void uxIORead_AddCallback(CMOCK_uxIORead_CALLBACK Callback);
void uxIORead_Stub(CMOCK_uxIORead_CALLBACK Callback);
#define uxIORead_StubWithCallback uxIORead_Stub
#define uxIORead_IgnoreArg_addr() uxIORead_CMockIgnoreArg_addr(__LINE__)
void uxIORead_CMockIgnoreArg_addr(UNITY_LINE_TYPE cmock_line);
#define vIOWrite_Ignore() vIOWrite_CMockIgnore()
void vIOWrite_CMockIgnore(void);
#define vIOWrite_StopIgnore() vIOWrite_CMockStopIgnore()
void vIOWrite_CMockStopIgnore(void);
#define vIOWrite_Expect(addr, data) vIOWrite_CMockExpect(__LINE__, addr, data)
void vIOWrite_CMockExpect(UNITY_LINE_TYPE cmock_line, ioAddress addr, ioData data);
typedef void (* CMOCK_vIOWrite_CALLBACK)(ioAddress addr, ioData data, int cmock_num_calls);
void vIOWrite_AddCallback(CMOCK_vIOWrite_CALLBACK Callback);
void vIOWrite_Stub(CMOCK_vIOWrite_CALLBACK Callback);
#define vIOWrite_StubWithCallback vIOWrite_Stub
#define vIOWrite_IgnoreArg_addr() vIOWrite_CMockIgnoreArg_addr(__LINE__)
void vIOWrite_CMockIgnoreArg_addr(UNITY_LINE_TYPE cmock_line);
#define vIOWrite_IgnoreArg_data() vIOWrite_CMockIgnoreArg_data(__LINE__)
void vIOWrite_CMockIgnoreArg_data(UNITY_LINE_TYPE cmock_line);

#if defined(__GNUC__) && !defined(__ICC) && !defined(__TMS470__)
#if __GNUC__ > 4 || (__GNUC__ == 4 && (__GNUC_MINOR__ > 6 || (__GNUC_MINOR__ == 6 && __GNUC_PATCHLEVEL__ > 0)))
#pragma GCC diagnostic pop
#endif
#endif

#endif
